name: Deploy with docker

on:
  push:
    branches: [ "deploy" ]
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  SERVER_HOST: ${{secrets.HOSTNAME}}
  SERVER_PORT: ${{secrets.PORT }}
  SERVER_PASSWORD: ${{secrets.TOKEN}}

jobs:
  compile:
    runs-on: ubuntu-latest
    environment: Actions
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      # maven缓存，不加的话每次都会去重新拉取，会影响速度
      - name: Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 编译打包
      - name: Build with Maven
        run: |
          mvn package -Dmaven.test.skip=true
      # 验证 Docker 用户名
      - name: Verify Docker Username
        run: |
          if [ -z "${{ env.DOCKER_USERNAME }}" ]; then
            echo "DOCKER_USERNAME is not set."
            exit 1
          else
            echo "DOCKER_USERNAME is set."
            echo "${{secrets.DOCKER_TOKEN}}"
          fi
      # 登录Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      #build镜像并push到中央仓库中
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/back:latest

      #push后，用ssh连接服务器执行脚本
      - name: SSH
        #        uses: fifsky/ssh-action@master
        uses: appleboy/ssh-action@master
        with:
          #          command: |
          #            cd /develop/work/education-back-server
          #            sh start.sh
          host: ${{secrets.HOSTNAME}}
          username: root
          port: ${{secrets.PORT }}
          #          key: ${{secrets.SERVER_PRIVATE_KEY}}
          password: ${{secrets.TOKEN}}
          script:
            sh /usr/local/sbin/scripts/start.sh
#            sh start.sh


